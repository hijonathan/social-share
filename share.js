// Generated by CoffeeScript 1.4.0
(function() {
  var hs, _ref;

  hs = (_ref = window.hubspotShare) != null ? _ref : window.hubspotShare = {};

  hs.TWITTER_MOCK = {
    text: "All the resources you need to keep your marketing passion satiated. Download the Marketer's Survival Kit",
    url: 'http://bit.ly/Ub6gz1',
    via: 'HubSpot',
    related: 'HubSpot',
    bindOpts: {
      tweet: function(evt) {
        return alert('you tweeted');
      },
      retweet: function(evt) {
        return alert('you retweeted');
      },
      follow: function(evt) {
        return alert('you followed');
      },
      favorite: function(evt) {
        return alert('you favorited');
      },
      click: function(evt) {
        return alert('you clicked');
      }
    },
    redirect_url: 'http://jonathan-kim.com/'
  };

  hs.FACEBOOK_MOCK = {
    appId: '123050457758183',
    name: 'People Argue Just to Win',
    caption: 'Bringing Facebook to the desktop and mobile web',
    description: "A small JavaScript library that allows you to harness the power of Facebook, bringing the user's identity, social graph and distribution power to your site.",
    link: 'http://bit.ly/Ub6gz1',
    picture: 'http://www.fbrell.com/public/f8.jpg',
    success: function(response) {
      return alert('you did it!');
    },
    fail: function(response) {
      return alert('you suck');
    },
    redirect_url: 'http://jonathan-kim.com/'
  };

  hs.TwitterShare = (function() {

    function TwitterShare(data) {
      this.data = data;
      this.ENDPOINT_BASE = "https://twitter.com/share";
      this.bindEvents = [this.data.bindEvent];
      this.redirect_url = this.data.redirect_url;
    }

    TwitterShare.prototype.render = function() {
      return this._renderButton() + this._renderScript();
    };

    TwitterShare.prototype._renderButton = function() {
      var attrs;
      attrs = this._buildAttrs();
      return "<a href=\"" + this.ENDPOINT_BASE + "\" class='twitter-share-button' " + attrs + ">Tweet</a>";
    };

    TwitterShare.prototype._buildAttrs = function() {
      var attrStr, data;
      data = {};
      data.text = this.data.text;
      data.url = this.data.url;
      data.via = this.data.via;
      data.related = this.data.related;
      data.text = data.text.replace(/\s/g, '+');
      data.url = encodeURIComponent(data.url);
      data.lang = 'en';
      data.size = 'large';
      data.count = 'none';
      attrStr = '';
      _(data).each(function(v, k) {
        return attrStr += "data-" + k + "=\"" + v + "\" ";
      });
      return attrStr;
    };

    TwitterShare.prototype._renderScript = function() {
      return "<script type=\"text/javascript\" charset=\"utf-8\">\n    window.twttr = (function (d,s,id) {\n        var t, js, fjs = d.getElementsByTagName(s)[0];\n        if (d.getElementById(id)) return; js=d.createElement(s); js.id=id;\n        js.src=\"http://platform.twitter.com/widgets.js\"; fjs.parentNode.insertBefore(js, fjs);\n        return window.twttr || (t = { _e: [], ready: function(f){ t._e.push(f) } });\n    }(document, \"script\", \"twitter-wjs\"));\n    twttr.ready(function(twttr) {\n        try {\n            " + (this._renderListeners()) + "\n        } catch (e) {\n            return\n        }\n    });\n</script>";
    };

    TwitterShare.prototype._renderListeners = function() {
      var callbackFunc, eventType, listeners, redirectUrl, trackingEndpoint, _i, _len, _ref1;
      listeners = "";
      _ref1 = this.bindEvents;
      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
        eventType = _ref1[_i];
        redirectUrl = document.createDocumentFragment();
        redirectUrl.textContent = this.redirect_url;
        trackingEndpoint = document.createDocumentFragment();
        trackingEndpoint.textContent = this.data.bindCallback;
        callbackFunc = "function() {\n    img = new Image();\n    img.onload = function() {\n        window.location.href = '" + redirectUrl.textContent + "'\n    }\n    img.src = '" + trackingEndpoint.textContent + "'\n}";
        listeners += "twttr.events.bind('" + eventType + "', " + callbackFunc + ");\n";
      }
      return listeners;
    };

    return TwitterShare;

  })();

  hs.FacebookShare = (function() {

    function FacebookShare(data) {
      this.data = data;
      this.ENDPOINT_BASE = 'https://www.facebook.com/dialog/send';
      this.buttonId = "hubspot-facebook-button-" + (+(new Date));
      this.fail = this.data.fail;
      this.redirect_url = this.data.redirect_url;
    }

    FacebookShare.prototype.render = function() {
      return this._renderButton() + this._renderScript();
    };

    FacebookShare.prototype._renderButton = function() {
      return "<div id='fb-root'></div>\n<a id='" + this.buttonId + "' class='btn btn-small'>Share</a>";
    };

    FacebookShare.prototype._renderScript = function() {
      return "<script>\n    window.fbAsyncInit = function() {\n        " + (this._renderInit()) + "\n        " + (this._renderListeners()) + "\n    };\n    " + (this._renderSDKSource()) + "\n</script>";
    };

    FacebookShare.prototype._renderInit = function() {
      var optionsStr;
      optionsStr = JSON.stringify(this._optionsJSON());
      return "FB.init(" + optionsStr + ");";
    };

    FacebookShare.prototype._optionsJSON = function() {
      return {
        appId: this.data.appId,
        status: true,
        cookie: true,
        xfbml: true
      };
    };

    FacebookShare.prototype._renderListeners = function() {
      var callbackFunc, dataStr, redirectUrl, trackingEndpoint;
      dataStr = JSON.stringify(this._dataJSON());
      redirectUrl = document.createDocumentFragment();
      redirectUrl.textContent = this.redirect_url;
      trackingEndpoint = document.createDocumentFragment();
      trackingEndpoint.textContent = this.data.bindCallback;
      callbackFunc = "function() {\n    img = new Image();\n    img.onload = function() {\n        window.location.href = '" + redirectUrl.textContent + "'\n    }\n    img.src = '" + trackingEndpoint.textContent + "'\n}";
      return "document.getElementById(\"" + this.buttonId + "\").addEventListener('click', function(evt) {\n    FB.ui(" + dataStr + ", function(response) {\n        try {\n            if (response && response.post_id) {\n                (" + callbackFunc + ")(response);\n            } else {\n                (" + (String(this.fail)) + ")(response);\n            }\n        } catch (e) {\n            return\n        }\n    });\n}, false);";
    };

    FacebookShare.prototype._dataJSON = function() {
      return {
        method: 'feed',
        name: this.data.name,
        caption: this.data.caption,
        description: this.data.description,
        link: this.data.link,
        picture: this.data.picture
      };
    };

    FacebookShare.prototype._renderSDKSource = function() {
      return "(function(d, debug){\n    var js, id = 'facebook-jssdk', ref = d.getElementsByTagName('script')[0];\n    if (d.getElementById(id)) {return;}\n    js = d.createElement('script'); js.id = id; js.async = true;\n    js.src = \"http://connect.facebook.net/en_US/all\" + (debug ? \"/debug\" : \"\") + \".js\";\n    ref.parentNode.insertBefore(js, ref);\n}(document, /*debug*/ false));";
    };

    return FacebookShare;

  })();

}).call(this);
